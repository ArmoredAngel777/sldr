#!/usr/bin/python

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

import os, sys, codecs
from argparse import ArgumentParser

try :
    from sldr.ldml import Ldml, flattenlocale
except ImportError :
    sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'lib')))
    from sldr.ldml import Ldml, flattenlocale, etwrite

parser = ArgumentParser()
parser.add_argument('this',help='File of interest')
parser.add_argument('other',help='Another file of interest')
parser.add_argument('base',help="Common ancestor")
parser.add_argument('-o','--output',help="Output file")
parser.add_argument('-d','--dirs',action='append',help='Directory to search for ldml files, repeatable')
parser.add_argument('-c','--default',default='proposed',help="Default Change draft level")
parser.add_argument('-C','--copycomments',help="Assumes this file has comments stripped rather than deleted, and uses either 'base' or 'other' as source of comments")
args = parser.parse_args()

this = Ldml(args.this)
other = Ldml(args.other)
base = Ldml(args.base)
this.merge(other, base, default=args.default, copycomments=args.copycomments)
sys.stdout = codecs.getwriter("UTF-8")(sys.stdout)
this.normalise()
if args.dirs :
    this = flattenlocale(this, dirs=args.dirs, rev='r')

if not args.output :
    outfh = sys.stdout
else :
    outfh = codecs.open(outf, "w", encoding="utf-8")

this.serialize_xml(outfh.write)

if args.output :
    outfh.close()

